name: CI

on:
  push:
  pull_request:
    branches:
      # Branches from forks have the form 'user:branch-name' so we only run
      # this job on pull_request events for branches that look like fork
      # branches. Without this we would end up running this job twice for non
      # forked PRs, once for the push and then once for opening the PR.
      - '**:**'

jobs:
  build:
    name: Build (Go ${{ matrix.go }} OS ${{ matrix.os }})
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        go: [ 1.14, 1.15 ]
        os: [ ubuntu-20.04, windows-latest, macos-latest ]
    steps:
      - name: Set up Go ${{ matrix.go }}
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}

      - name: Check out code
        uses: actions/checkout@v2

      - name: Init Go modules Cache # Docs: <https://git.io/JfAKn#go---modules>
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-

      - name: Install Go dependencies
        run: go mod download


      - name: Run golang tests on Windows without codecov
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          go test -v -race -cover -tags=debug ./pkg/frame
          go test -v -race -cover -tags=debug ./pkg/pipe
          go test -v -race -cover -tags=debug ./pkg/rpc
          go test -v -race -cover -tags=debug ./pkg/socket


      - name: Run golang tests on MacOS or Linux with codecov
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          mkdir ./coverage-ci
          go test -v -race -cover -tags=debug -coverprofile=./coverage-ci/frame.txt -covermode=atomic ./pkg/frame
          go test -v -race -cover -tags=debug -coverprofile=./coverage-ci/pipe.txt -covermode=atomic ./pkg/pipe
          go test -v -race -cover -tags=debug -coverprofile=./coverage-ci/rpc.txt -covermode=atomic ./pkg/rpc
          go test -v -race -cover -tags=debug -coverprofile=./coverage-ci/socket.txt -covermode=atomic ./pkg/socket
          cat ./coverage-ci/*.txt > ./coverage-ci/summary.txt

      - uses: codecov/codecov-action@v1 # Docs: <https://github.com/codecov/codecov-action>
        if: ${{ matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest' }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage-ci/summary.txt
          fail_ci_if_error: false

  golangci-lint:
    name: Golang-CI (lint)
    runs-on: ubuntu-20.04
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Run linter
        uses: golangci/golangci-lint-action@v2 # Action page: <https://github.com/golangci/golangci-lint-action>
        with:
          version: v1.33 # without patch version
          only-new-issues: false # show only new issues if it's a pull request